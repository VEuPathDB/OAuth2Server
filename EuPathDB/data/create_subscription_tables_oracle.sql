-- Subscriptions table
CREATE TABLE USERACCOUNTS.SUBSCRIPTIONS (
  "SUBSCRIPTION_ID"  NUMBER(12,0) NOT NULL ENABLE,
  "IS_ACTIVE"        NUMBER(1) NOT NULL ENABLE,
  "DISPLAY_NAME"     VARCHAR2(500 BYTE),
  "ADMIN_USER_ID"    NUMBER(12,0), 
  CONSTRAINT "SUBSCRIPTIONS_PK" PRIMARY KEY ("SUBSCRIPTION_ID"),
  CONSTRAINT "DISPLAY_NAME_UNIQ_CONSTRAINT" UNIQUE ("DISPLAY_NAME"),
  CONSTRAINT "SUBSCRIPTIONS_ADMIN_USER_ID_FKEY" FOREIGN KEY ("ADMIN_USER_ID")
     REFERENCES USERACCOUNTS.ACCOUNTS ("USER_ID")
);

-- Invoices table
CREATE TABLE USERACCOUNTS.INVOICES (
  "INVOICE_ID"                VARCHAR2(100 BYTE) NOT NULL ENABLE,
  "SUBSCRIPTION_ID"           NUMBER(12,0) NOT NULL ENABLE,
  "INVOICE_DATE"              TIMESTAMP NOT NULL ENABLE,
  "ADMINISTRATIVE_UNIT_TYPE"  VARCHAR2(100 BYTE) NOT NULL ENABLE,
  "ADMINISTRATIVE_UNIT"       VARCHAR2(500 BYTE) NOT NULL ENABLE,
  "ADMINISTRATIVE_UNIT_NOTE"  VARCHAR2(400 BYTE),
  "INVOICEE_NAME"             VARCHAR2(200 BYTE),
  "INVOICEE_EMAIL"            VARCHAR2(200 BYTE),
  "INVOICEE_ADDRESS"          VARCHAR2(500 BYTE),
  "INVOICEE_INSTITUTION"      VARCHAR2(200 BYTE),
  "INVOICEE_DEPARTMENT"       VARCHAR2(200 BYTE),
  "TOTAL_FEES"                NUMBER(12,2),
  "NUM_YEARS"                 NUMBER(12,0),
  "INVOICE_NOTES"             VARCHAR2(4000 BYTE),
  "INSTITUTION_DISPLAY_NAME"  VARCHAR2(200 BYTE),
  "LAST_COVERAGE_YEAR"        NUMBER(2),
  "IS_APPROVED"               NUMBER(1),
  "PAYMENT_CONFIRMED"         NUMBER(1),
  "OUTREACH_NOTES"            VARCHAR2(4000 BYTE),
  CONSTRAINT "INVOICES_PK" PRIMARY KEY ("INVOICE_ID"),
  CONSTRAINT "INVOICES_SUBSCRIPTION_ID_FKEY" FOREIGN KEY ("SUBSCRIPTION_ID")
     REFERENCES USERACCOUNTS.SUBSCRIPTIONS ("SUBSCRIPTION_ID")
);

-- Subscription Groups table
CREATE TABLE USERACCOUNTS.SUBSCRIPTION_GROUPS (
  "GROUP_ID"            NUMBER(12,0) NOT NULL ENABLE,
  "SUBSCRIPTION_ID"     NUMBER(12,0), -- can be null for known groups who have not subscribed
  "GROUP_NAME"          VARCHAR2(200 BYTE) NOT NULL ENABLE,
  "SUBSCRIPTION_TOKEN"  VARCHAR2(200 BYTE) NOT NULL ENABLE,
  CONSTRAINT "SUBSCRIPTION_GROUPS_PK" PRIMARY KEY ("GROUP_ID"),
  CONSTRAINT "GROUP_NAME_UNIQ_CONSTRAINT" UNIQUE ("GROUP_NAME"),
  CONSTRAINT "SUBSCRIPTION_TOKEN_UNIQ_CONSTRAINT" UNIQUE ("SUBSCRIPTION_TOKEN"),
  CONSTRAINT "SUBSCRIPTION_GROUP_SUBSCRIPTION_ID_FKEY" FOREIGN KEY ("SUBSCRIPTION_ID")
     REFERENCES USERACCOUNTS.SUBSCRIPTIONS ("SUBSCRIPTION_ID")
);

-- Subscription Group Leads table
CREATE TABLE USERACCOUNTS.SUBSCRIPTION_GROUP_LEADS (
  "GROUP_ID"    NUMBER(12,0) NOT NULL ENABLE,
  "USER_ID"     NUMBER(12,0) NOT NULL ENABLE,
  CONSTRAINT "GROUP_LEADS_UNIQ_CONSTRAINT" UNIQUE ("GROUP_ID","USER_ID"),
  CONSTRAINT "GROUP_LEADS_GROUP_ID_FKEY" FOREIGN KEY ("GROUP_ID")
     REFERENCES USERACCOUNTS.SUBSCRIPTION_GROUPS ("GROUP_ID"),
  CONSTRAINT "GROUP_LEADS_USER_ID_FKEY" FOREIGN KEY ("USER_ID")
     REFERENCES USERACCOUNTS.ACCOUNTS ("USER_ID")
);

-- Indexes
CREATE INDEX useraccounts.subscription_groups_idx1
ON useraccounts.subscription_groups(subscription_id);

CREATE INDEX useraccounts.subscription_group_leads_idx2
ON useraccounts.subscription_group_leads(group_id);

-- SUBSCRIPTIONS_PKSEQ sequence
-- NOTE: Care must be taken to set the sequence start value appropriately.
--       This involves recreating the sequence with different values on
--       north and south replicated instances (south instance should end with 3)
CREATE SEQUENCE USERACCOUNTS.SUBSCRIPTIONS_PKSEQ
  MINVALUE 1 MAXVALUE 9999999999999999999999999999
  INCREMENT BY 10 START WITH 100000 CACHE 20 NOORDER NOCYCLE NOKEEP GLOBAL;

-- SUBSCRIPTION_GROUPS_PKSEQ sequence
-- NOTE: Care must be taken to set the sequence start value appropriately.
--       This involves recreating the sequence with different values on
--       north and south replicated instances (south instance should end with 3)
CREATE SEQUENCE USERACCOUNTS.SUBSCRIPTION_GROUPS_PKSEQ
  MINVALUE 1 MAXVALUE 9999999999999999999999999999
  INCREMENT BY 10 START WITH 100000 CACHE 20 NOORDER NOCYCLE NOKEEP GLOBAL;

-- permissions
GRANT SELECT ON "USERACCOUNTS"."SUBSCRIPTIONS" TO "USERACCTS_R";
GRANT SELECT, INSERT, UPDATE, DELETE ON "USERACCOUNTS"."SUBSCRIPTIONS" TO "USERACCTS_W";
GRANT SELECT ON "USERACCOUNTS"."INVOICES" TO "USERACCTS_R";
GRANT SELECT, INSERT, UPDATE, DELETE ON "USERACCOUNTS"."INVOICES" TO "USERACCTS_W";
GRANT SELECT ON "USERACCOUNTS"."SUBSCRIPTION_GROUPS" TO "USERACCTS_R";
GRANT SELECT, INSERT, UPDATE, DELETE ON "USERACCOUNTS"."SUBSCRIPTION_GROUPS" TO "USERACCTS_W";
GRANT SELECT ON "USERACCOUNTS"."SUBSCRIPTION_GROUP_LEADS" TO "USERACCTS_R";
GRANT SELECT, INSERT, UPDATE, DELETE ON "USERACCOUNTS"."SUBSCRIPTION_GROUP_LEADS" TO "USERACCTS_W";

GRANT SELECT ON "USERACCOUNTS"."SUBSCRIPTIONS_PKSEQ" TO "USERACCTS_R";
GRANT SELECT ON "USERACCOUNTS"."SUBSCRIPTIONS_PKSEQ" TO "USERACCTS_W";
GRANT SELECT ON "USERACCOUNTS"."SUBSCRIPTION_GROUPS_PKSEQ" TO "USERACCTS_R";
GRANT SELECT ON "USERACCOUNTS"."SUBSCRIPTION_GROUPS_PKSEQ" TO "USERACCTS_W";
