
DROP SCHEMA IF EXISTS useraccounts CASCADE;
CREATE SCHEMA IF NOT EXISTS useraccounts;
GRANT USAGE ON SCHEMA useraccounts TO USERACCTS_W;
GRANT USAGE ON SCHEMA useraccounts TO USERACCTS_R;


-- Accounts table
CREATE TABLE USERACCOUNTS.ACCOUNTS (
  USER_ID       BIGINT NOT NULL,
  EMAIL         VARCHAR(255) NOT NULL,
  PASSWD        VARCHAR(50) NOT NULL,
  IS_GUEST      BOOLEAN NOT NULL,
  SIGNATURE     VARCHAR(40),
  STABLE_ID     VARCHAR(500),
  REGISTER_TIME TIMESTAMP,
  LAST_LOGIN    TIMESTAMP,
  CONSTRAINT ACCOUNTS_PK PRIMARY KEY (USER_ID),
  CONSTRAINT EMAIL_UNIQ_CONSTRAINT UNIQUE (EMAIL)
);

-- Account_Properties table
CREATE TABLE USERACCOUNTS.ACCOUNT_PROPERTIES (
  USER_ID BIGINT,
  KEY     VARCHAR(30),
  VALUE   VARCHAR(4000),
  CONSTRAINT ACCOUNT_PROPERTIES_PK PRIMARY KEY (USER_ID, KEY),
  CONSTRAINT ACCOUNT_PROPERTIES_USER_ID_FKEY FOREIGN KEY (USER_ID)
     REFERENCES USERACCOUNTS.ACCOUNTS (USER_ID)
);

-- Guest_IDs table
CREATE TABLE USERACCOUNTS.GUEST_IDS (
  USER_ID       BIGINT NOT NULL,
  CREATION_TIME TIMESTAMP NOT NULL,
  CONSTRAINT GUEST_IDS_PK PRIMARY KEY (USER_ID)
);

-- Accounts_PKSEQ sequence
-- NOTE: Care must be taken to set the sequence start value appropriately.
--       This involves recreating the sequence with different values on
--       north and south replicated instances.
CREATE SEQUENCE USERACCOUNTS.ACCOUNTS_PKSEQ
  INCREMENT BY 10 START WITH 261307030;

  -- Permissions to these resources
GRANT SELECT ON USERACCOUNTS.ACCOUNTS TO USERACCTS_R;
GRANT SELECT ON USERACCOUNTS.ACCOUNTS TO USERACCTS_W;
GRANT INSERT ON USERACCOUNTS.ACCOUNTS TO USERACCTS_W;
GRANT UPDATE ON USERACCOUNTS.ACCOUNTS TO USERACCTS_W;
GRANT DELETE ON USERACCOUNTS.ACCOUNTS TO USERACCTS_W;
GRANT SELECT ON USERACCOUNTS.ACCOUNT_PROPERTIES TO USERACCTS_R;
GRANT SELECT ON USERACCOUNTS.ACCOUNT_PROPERTIES TO USERACCTS_W;
GRANT INSERT ON USERACCOUNTS.ACCOUNT_PROPERTIES TO USERACCTS_W;
GRANT UPDATE ON USERACCOUNTS.ACCOUNT_PROPERTIES TO USERACCTS_W;
GRANT DELETE ON USERACCOUNTS.ACCOUNT_PROPERTIES TO USERACCTS_W;
GRANT SELECT ON USERACCOUNTS.GUEST_IDS TO USERACCTS_R;
GRANT SELECT ON USERACCOUNTS.GUEST_IDS TO USERACCTS_W;
GRANT INSERT ON USERACCOUNTS.GUEST_IDS TO USERACCTS_W;
GRANT UPDATE ON USERACCOUNTS.GUEST_IDS TO USERACCTS_W;
GRANT DELETE ON USERACCOUNTS.GUEST_IDS TO USERACCTS_W;
GRANT SELECT ON USERACCOUNTS.ACCOUNTS_PKSEQ TO USERACCTS_R;
GRANT SELECT ON USERACCOUNTS.ACCOUNTS_PKSEQ TO USERACCTS_W;

-- Subscriptions table
CREATE TABLE useraccounts.subscriptions (
  subscription_id BIGINT NOT NULL PRIMARY KEY,
  is_active BOOLEAN NOT NULL,
  admin_user_id integer,
  display_name varchar(500)
);

-- Invoices table
CREATE TABLE useraccounts.invoices (
  invoice_id VARCHAR(100) NOT NULL PRIMARY KEY,
  subscription_id BIGINT NOT NULL REFERENCES useraccounts.subscriptions(subscription_id),
  invoice_date TIMESTAMP NOT NULL,
  administrative_unit_type VARCHAR(100) NOT NULL,
  administrative_unit VARCHAR(500) NOT NULL,
  administrative_unit_note VARCHAR(400),
  invoicee_name VARCHAR(200),
  invoicee_email VARCHAR(200),
  invoicee_address VARCHAR(500),
  invoicee_institution VARCHAR(200),
  invoicee_department VARCHAR(200),
  total_fees NUMERIC(12,2),
  num_years BIGINT,
  invoice_notes TEXT,
  institution_display_name VARCHAR(200),
  last_coverage_year integer,
  is_approved BOOLEAN,
  payment_confirmed BOOLEAN,
  outreach_notes TEXT
);

-- Subscription Groups table
CREATE TABLE useraccounts.subscription_groups (
  group_id BIGINT NOT NULL PRIMARY KEY,
  subscription_id BIGINT REFERENCES useraccounts.subscriptions(subscription_id),
  group_name VARCHAR(200) NOT NULL UNIQUE,
  subscription_token VARCHAR(200) NOT NULL UNIQUE
);

-- Subscription Group Leads table
CREATE TABLE useraccounts.subscription_group_leads (
  group_id BIGINT NOT NULL REFERENCES useraccounts.subscription_groups(group_id),
  user_id BIGINT NOT NULL REFERENCES useraccounts.accounts(user_id),
  CONSTRAINT group_leads_uniq_constraint UNIQUE (group_id, user_id)
);

CREATE SEQUENCE useraccounts.subscriptions_pkseq
  INCREMENT BY 10 START WITH 100000;

CREATE SEQUENCE useraccounts.subscription_groups_pkseq
  INCREMENT BY 10 START WITH 100000;

GRANT SELECT ON USERACCOUNTS.SUBSCRIPTIONS TO USERACCTS_R;
GRANT SELECT, INSERT, UPDATE, DELETE ON USERACCOUNTS.SUBSCRIPTIONS TO USERACCTS_W;
GRANT SELECT ON USERACCOUNTS.INVOICES TO USERACCTS_R;
GRANT SELECT, INSERT, UPDATE, DELETE ON USERACCOUNTS.INVOICES TO USERACCTS_W;
GRANT SELECT ON USERACCOUNTS.SUBSCRIPTION_GROUPS TO USERACCTS_R;
GRANT SELECT, INSERT, UPDATE, DELETE ON USERACCOUNTS.SUBSCRIPTION_GROUPS TO USERACCTS_W;
GRANT SELECT ON USERACCOUNTS.SUBSCRIPTION_GROUP_LEADS TO USERACCTS_R;
GRANT SELECT, INSERT, UPDATE, DELETE ON USERACCOUNTS.SUBSCRIPTION_GROUP_LEADS TO USERACCTS_W;

GRANT SELECT ON USERACCOUNTS.SUBSCRIPTIONS_PKSEQ TO USERACCTS_R;
GRANT SELECT ON USERACCOUNTS.SUBSCRIPTION_GROUPS_PKSEQ TO USERACCTS_R;
